{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xc4A4840B3FF26D1908f5bfaC6eA4F7a79EB4C42a",
      "txHash": "0x07d9c7f44604fcf16e674dede1769ab953a744265a86210ccbbb27cffd86a5a8",
      "kind": "uups"
    },
    {
      "address": "0x0B6Ca1E37bB7F117A15b21564604eCc35f7732b4",
      "txHash": "0xb68203d579b49362c8287f237ac932b4569c4cda7fd03e20685703c5eac01f1c",
      "kind": "uups"
    },
    {
      "address": "0x752eFB738fBc8AD51640A8042392d30e3652cdEd",
      "txHash": "0xb10ab2fac6d5c71b7cc23426447228c62d4d2a493f34637139c2014edc0e110d",
      "kind": "uups"
    },
    {
      "address": "0xBAacf19b106FAa44183E66A7B5082f24A30a2F38",
      "txHash": "0x13af5a59b419a80f1dcc4797f1371fb77f286c43fd72ac27ac840410fc45f1ca",
      "kind": "uups"
    },
    {
      "address": "0x5fB90e766301ef3b826bFf4e539421742743a164",
      "txHash": "0xb5a5b81ee0c6f2f1279883f27a001708ef400d127a24be1e971ecbe1956efd1c",
      "kind": "uups"
    },
    {
      "address": "0x5D4f6C308D9DcBCC1d468285D547a4367df36437",
      "txHash": "0x7d1deb694012002448a2c94f97bf4481e18c4c5ad0538d99ecac1633f6181949",
      "kind": "uups"
    },
    {
      "address": "0x595A1c648E8478780B5DA84743595dD1D1D3bf70",
      "txHash": "0x2dcb12e1923d8f2159e247e7ad689de4f4f2334e284a65e102c0ea476adb9b43",
      "kind": "uups"
    },
    {
      "address": "0x1AE0AC5E7562f91340dfeE9f9562BE073A1dd7c7",
      "txHash": "0x2de720922b759bfc311417ddbc2f281e07c6d0486bef264fbd9095408f1978c1",
      "kind": "uups"
    },
    {
      "address": "0xbEd3dD53997908b3c04d1e6A8634A6d4537Af3A2",
      "txHash": "0xa3cb8f29f9296ed9ed7c293afbe3e0ec7bab94c8a6df317b1ac7aaaf5158aa48",
      "kind": "uups"
    },
    {
      "address": "0xa8AEa7de82A580Fc7945E449D2D8DCa4Bf7D237a",
      "txHash": "0xb18965cee62a31d5301f902d48cda8a1b4b6c89e2781dd70494f162f2bcb0d5c",
      "kind": "uups"
    },
    {
      "address": "0x7Bf239b3D4d68f799e3a991e666bb84eBB5a4931",
      "txHash": "0x966bff0a302dc495392ddd434952c559e61510c263d046c3eb05743f0225b3de",
      "kind": "uups"
    },
    {
      "address": "0xaD6be5F7CAb153348870597dBBf781CbAa531f98",
      "txHash": "0x5babeb92522977df31b49b588f81fa9fc2af925394696239430a5648d00362eb",
      "kind": "uups"
    },
    {
      "address": "0x586f9Db49C8b256513Ce6c62463E2302d81A1Fb5",
      "txHash": "0x8e9bcf452693fd33f8f253ccc0d697f06068d204eb58b6213cac6fc816ad7b33",
      "kind": "uups"
    },
    {
      "address": "0x9c66B78d9B28d6f8F22E8c77cc6Bf64fC38D99C0",
      "txHash": "0xb2f02bc836ff1fac04a6b9bf6a65d4df5cf15c2a5920c0ccdc23bc0d38ed763c",
      "kind": "uups"
    },
    {
      "address": "0x395287620452a4AC5eFc9dbB17334E5747d26550",
      "txHash": "0x2bb619b72c26315ff7e4a17f7a3912d07262bf10a400753a794c3fe963b8a790",
      "kind": "uups"
    },
    {
      "address": "0x2A0B1c2390aC241Afb7C9dc9EcBD3BcEC7d11417",
      "txHash": "0xa2653c55f928e5d4663c5658cbe482b9dff0cebbb011f301d5e997646e591cb1",
      "kind": "uups"
    },
    {
      "address": "0xF1dbD38cb89C83cBEE9C417696830366b1cbe56F",
      "txHash": "0x862f37368f6976c97c06f2c564cd30bba406f86b82989c183bf86c6bc9599a99",
      "kind": "uups"
    },
    {
      "address": "0x5BB4b655f1705D156EED011B4087698cBE26ce21",
      "txHash": "0xe3435347ba6ee6ac99a9f9b94004db736b6862914eeb6d83b085bf5a4fd5e8d9",
      "kind": "uups"
    },
    {
      "address": "0x3679f112f998EE2D98F3E8CD88092b4810F6b563",
      "txHash": "0x8bd4a32ad61d6131525f14047b7196f747288326042fab0d773f8b742de89cc9",
      "kind": "uups"
    },
    {
      "address": "0x1c393DeFe7cA061b18d8Ce42049F232bd78CD6b6",
      "txHash": "0x050385b83d8a7205b701d9d0b3ec24ae2aa5ef63dd70640f12176e71cfa3887d",
      "kind": "uups"
    },
    {
      "address": "0x7b6AB6E2F1b7F110927b66Be53377E72F1Ab28e7",
      "txHash": "0x04af4b2da025aff5c91c396135811abefab83cbd9352a461c30c178ad3e1ac3a",
      "kind": "uups"
    },
    {
      "address": "0x4E82Bb3b2857768f6c5f23b133eeAF1B0B8da64f",
      "txHash": "0x175a8dc9999f1d43c87c1eba65fc43eb270a6e407fab08ba9a6bf0c23b7bdd06",
      "kind": "uups"
    },
    {
      "address": "0x9D5Bd601fb8135C37Be14c3fD9a4c3Cd856DaFCB",
      "txHash": "0x8a13f87237f0cce03a05761fdb1be7e6d52e1678e5cf05001b334dd5dad9fa01",
      "kind": "uups"
    },
    {
      "address": "0x37bfFDD96B065829F767495bC1039825100F42a9",
      "txHash": "0x87ee3a99759e0dc06cacf23409ba96d59ba16f999387804647ab0cc4b231e85c",
      "kind": "uups"
    },
    {
      "address": "0x5c925Aea25A46435C4d4F153060F65B124129956",
      "txHash": "0x58f6723c0b5f2b7fa10e4a762a9a08fc8d14c6afc40dedc36cf3795429d35278",
      "kind": "uups"
    },
    {
      "address": "0x6F6342a7F9944b993c4D2A84b3bD6BdEba384cD0",
      "txHash": "0x3e574956bd7bcd1a693433dc322ffd2b39e174817478e2c8602946c4bccaddf9",
      "kind": "uups"
    },
    {
      "address": "0x07B7854d7E047F43A78801b8C7783a3776837cCF",
      "txHash": "0x4f6ffe71997fbf90b7e3dca5dd8b0531ee5dc869b5c3c94b7e03cbad18c6828b",
      "kind": "uups"
    },
    {
      "address": "0x26E79D3905DFEf5Aa642C6f89BC4Da9d3A27e925",
      "txHash": "0xc16884be72c2f643418144d250f117ba3e4d192d7593eddb0bba9b489b30b12c",
      "kind": "uups"
    },
    {
      "address": "0xd34e588F2Ec349A98aBffeeB4ee0568Cf52A94b4",
      "txHash": "0x4a2e86eebc2859a9b33590bce7617ab3557e973c3ba057730579182be6a45dfd",
      "kind": "uups"
    },
    {
      "address": "0xdeba37eAB738226f4877bc75d7B6105c5920F51B",
      "txHash": "0xc805ba148dbe22591be9e3d3bc90ed78468f4ce747ce2434c3699aaeaedcaad8",
      "kind": "uups"
    },
    {
      "address": "0x716EAc4BfA3526BE2DB1AC8F2cc1E68f350EB7D5",
      "txHash": "0x463e6faaf0dfc5f9a9891e88429cb544694047d232c2e711b75c635c4ca7ce58",
      "kind": "uups"
    },
    {
      "address": "0x7B06838bd1c69FAE3613CBC677b6EEff368B6DAF",
      "txHash": "0xa5281ddb5a41db19ba194e5e7859422e90a09aa0af286a88d706d63bce388219",
      "kind": "uups"
    },
    {
      "address": "0x01B142Df6365c8afB5Ef065A852584e6e83A3E57",
      "txHash": "0x75255ab49a49923d3de19710f15a1a1b78eb848ccc4f4bd0717b920d69cec2a2",
      "kind": "uups"
    },
    {
      "address": "0x403947fb2BF1543e5b435b540100d4670a877dba",
      "txHash": "0xcca118b8027e360fd20194744b1ac56875158d0fee210cb2f92b762f3fe393c9",
      "kind": "uups"
    },
    {
      "address": "0xef921191cDd8792fBe8B8C93D2cd514b03f04a21",
      "txHash": "0xc6564e06a9745dc7a1a81ef52168e9cca7e120f9007f31e77ecca993cb84439e",
      "kind": "uups"
    },
    {
      "address": "0x784C8B14F20755733d0e4169591c22d2983Ff341",
      "txHash": "0x587f05e4fde81ac8820c86867a8358b9c086222840940364f8bf40c303140772",
      "kind": "uups"
    },
    {
      "address": "0x83509A0048698c4e4a6EdBEdCEBE348C4c16075c",
      "txHash": "0x96038d7fd302120887c79292b1214d714b1a4fa8e7575205704751d663351bba",
      "kind": "uups"
    },
    {
      "address": "0xaCB624E96272B22d27a5986d2A0d28fD532E8f7b",
      "txHash": "0x1adf3beb744f4d1590a01e6c784f00adfab8be6b036bbf8a3daaea6c744a43b5",
      "kind": "uups"
    },
    {
      "address": "0xA54dFD106356e473c6aF1aED96278D4Bc418F314",
      "txHash": "0x3e59dccc64f8fe0ab28f77aa91165dff7a837efd485fee840025f21d63fd2c94",
      "kind": "uups"
    }
  ],
  "impls": {
    "095f6753c150cbf75f5c0967210fe05abd29f720d3151f41ae3156ffac456f88": {
      "address": "0x19BDE23bF5E42754A97bC5c3F6DD0b972c15c100",
      "txHash": "0x0e587c880505253578265632d15e0cd3baf955a3bd333f8c47968501700c7dc6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "sanctionsContract",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:14"
          },
          {
            "label": "scallingFactorX",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:47"
          },
          {
            "label": "smartTokenArray",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_contract(SmartToken)6490)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:48"
          },
          {
            "label": "lastRebaseCount",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:49"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IERC20Update)5581",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:50"
          },
          {
            "label": "baseTokenDecimals",
            "offset": 20,
            "slot": "255",
            "type": "t_uint8",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:51"
          },
          {
            "label": "interval",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:52"
          },
          {
            "label": "lastTimeStamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:53"
          },
          {
            "label": "smartTokenInitialized",
            "offset": 0,
            "slot": "258",
            "type": "t_bool",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:54"
          },
          {
            "label": "signersAddress",
            "offset": 1,
            "slot": "258",
            "type": "t_address",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:55"
          },
          {
            "label": "sequenceStatus",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:56"
          },
          {
            "label": "managementFeesRate",
            "offset": 0,
            "slot": "260",
            "type": "t_uint32",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:59"
          },
          {
            "label": "mgmtFeesHistory",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint32)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:60"
          },
          {
            "label": "userMgmtFeeHistory",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:61"
          },
          {
            "label": "managementFeeEnabled",
            "offset": 0,
            "slot": "263",
            "type": "t_bool",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:62"
          },
          {
            "label": "mgmtFeeSum",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:63"
          },
          {
            "label": "scheduledRebases",
            "offset": 0,
            "slot": "265",
            "type": "t_array(t_struct(ScheduledRebase)6594_storage)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:73"
          },
          {
            "label": "nextSequenceNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_contract(SmartToken)6490)dyn_storage": {
            "label": "contract SmartToken[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ScheduledRebase)6594_storage)dyn_storage": {
            "label": "struct TokenFactory.ScheduledRebase[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Update)5581": {
            "label": "contract IERC20Update",
            "numberOfBytes": "20"
          },
          "t_contract(SmartToken)6490": {
            "label": "contract SmartToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(ScheduledRebase)6594_storage": {
            "label": "struct TokenFactory.ScheduledRebase",
            "members": [
              {
                "label": "sequenceNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isNaturalRebase",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "smartTokenXprice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3596f73dfb97939ab4e3a8616d36254162d6f6e8200f358d7fb096e8d48a8d99": {
      "address": "0x7FEBf86Db6A485C5D22a44757c3566A5B4160e82",
      "txHash": "0x76c2cd639c1d10ce5fa2f33b71a0d3669222c487c1a32d68f535ebb16dcfb2ee",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2398_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "sanctionsContract",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:14"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "tokenFactory",
            "offset": 0,
            "slot": "405",
            "type": "t_contract(TokenFactory)8256",
            "contract": "SmartToken",
            "src": "contracts/vaults/SmartToken.sol:35"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "406",
            "type": "t_contract(IERC20Update)5581",
            "contract": "SmartToken",
            "src": "contracts/vaults/SmartToken.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Update)5581": {
            "label": "contract IERC20Update",
            "numberOfBytes": "20"
          },
          "t_contract(TokenFactory)8256": {
            "label": "contract TokenFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2398_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2398_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ee4925d90f13d5d57f625e80d744a59d38828c118a1b4a5f9a11d1ef838f2af1": {
      "address": "0xD2Fb977C8b21044132f449533AC47347C501d7a3",
      "txHash": "0xbf79cb56aaffe6565e93133da5d070b79635a90973c9d3153be33928669f9ebd",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "sanctionsContract",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:14"
          },
          {
            "label": "scallingFactorX",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:47"
          },
          {
            "label": "smartTokenArray",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_contract(SmartToken)10441)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:48"
          },
          {
            "label": "lastRebaseCount",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:49"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IERC20Update)9328",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:50"
          },
          {
            "label": "baseTokenDecimals",
            "offset": 20,
            "slot": "255",
            "type": "t_uint8",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:51"
          },
          {
            "label": "interval",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:52"
          },
          {
            "label": "lastTimeStamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:53"
          },
          {
            "label": "smartTokenInitialized",
            "offset": 0,
            "slot": "258",
            "type": "t_bool",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:54"
          },
          {
            "label": "signersAddress",
            "offset": 1,
            "slot": "258",
            "type": "t_address",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:55"
          },
          {
            "label": "sequenceNumberApplied",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:56"
          },
          {
            "label": "managementFeesRate",
            "offset": 0,
            "slot": "260",
            "type": "t_uint32",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:59"
          },
          {
            "label": "mgmtFeesHistory",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint32)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:60"
          },
          {
            "label": "userMgmtFeeHistory",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:61"
          },
          {
            "label": "managementFeeEnabled",
            "offset": 0,
            "slot": "263",
            "type": "t_bool",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:62"
          },
          {
            "label": "mgmtFeeSum",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:63"
          },
          {
            "label": "scheduledRebases",
            "offset": 0,
            "slot": "265",
            "type": "t_array(t_struct(ScheduledRebase)10545_storage)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:73"
          },
          {
            "label": "nextSequenceNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_contract(SmartToken)10441)dyn_storage": {
            "label": "contract SmartToken[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ScheduledRebase)10545_storage)dyn_storage": {
            "label": "struct TokenFactory.ScheduledRebase[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Update)9328": {
            "label": "contract IERC20Update",
            "numberOfBytes": "20"
          },
          "t_contract(SmartToken)10441": {
            "label": "contract SmartToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(ScheduledRebase)10545_storage": {
            "label": "struct TokenFactory.ScheduledRebase",
            "members": [
              {
                "label": "sequenceNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isNaturalRebase",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "smartTokenXprice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f479ccb5f2aa3930937346afebe2d8ceda8cf89f12ff1b0d8cec40ddd0cc553d": {
      "address": "0x9855aF46E6F901ECa2cb214FB1eFC73218c6A6b2",
      "txHash": "0xc20bbb188ebb1b4eaf95290f83f600b94dcde190f5c1c835403ef0db47e9cbbb",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2707_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "sanctionsContract",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:14"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "tokenFactory",
            "offset": 0,
            "slot": "405",
            "type": "t_contract(TokenFactory)12203",
            "contract": "SmartToken",
            "src": "contracts/vaults/SmartToken.sol:35"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "406",
            "type": "t_contract(IERC20Update)9328",
            "contract": "SmartToken",
            "src": "contracts/vaults/SmartToken.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Update)9328": {
            "label": "contract IERC20Update",
            "numberOfBytes": "20"
          },
          "t_contract(TokenFactory)12203": {
            "label": "contract TokenFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2707_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2707_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "da841ee6b8f129e512f9a69db6188be3b95a07392717178df0f91c6fc3e7f4a9": {
      "address": "0x8e3c61a8D70d4DAB175a8a1f87BDfcDA6bfadC78",
      "txHash": "0x3c5177ed6950111c1def16fa8ab7cbe90cf8339b229cc637946d1a89cc78086b",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2398_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "sanctionsContract",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:14"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "tokenFactory",
            "offset": 0,
            "slot": "405",
            "type": "t_contract(TokenFactory)8256",
            "contract": "SmartToken",
            "src": "contracts/vaults/SmartToken.sol:35"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "406",
            "type": "t_contract(IERC20Update)5581",
            "contract": "SmartToken",
            "src": "contracts/vaults/SmartToken.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Update)5581": {
            "label": "contract IERC20Update",
            "numberOfBytes": "20"
          },
          "t_contract(TokenFactory)8256": {
            "label": "contract TokenFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2398_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2398_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "72a6f2dbb41d3c3c4f5148101c8b02d30f656198e98e77974a713ffb2d422150": {
      "address": "0x397F6C63E321f10B75Ffac7452d193b6CbdFABbb",
      "txHash": "0x4ceb198e76a224e57bc99407eb89954526e09b9df4c14737395dd11707161876",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "sanctionsContract",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:14"
          },
          {
            "label": "scallingFactorX",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:48"
          },
          {
            "label": "smartTokenArray",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_contract(SmartToken)10396)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:49"
          },
          {
            "label": "lastRebaseCount",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:50"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IERC20Update)9328",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:51"
          },
          {
            "label": "baseTokenDecimals",
            "offset": 20,
            "slot": "255",
            "type": "t_uint8",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:52"
          },
          {
            "label": "interval",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:53"
          },
          {
            "label": "lastTimeStamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:54"
          },
          {
            "label": "smartTokenInitialized",
            "offset": 0,
            "slot": "258",
            "type": "t_bool",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:55"
          },
          {
            "label": "signersAddress",
            "offset": 1,
            "slot": "258",
            "type": "t_address",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:56"
          },
          {
            "label": "sequenceNumberApplied",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:57"
          },
          {
            "label": "managementFeesRate",
            "offset": 0,
            "slot": "260",
            "type": "t_uint32",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:60"
          },
          {
            "label": "mgmtFeesHistory",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint32)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:61"
          },
          {
            "label": "userMgmtFeeHistory",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:62"
          },
          {
            "label": "managementFeeEnabled",
            "offset": 0,
            "slot": "263",
            "type": "t_bool",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:63"
          },
          {
            "label": "mgmtFeeSum",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:64"
          },
          {
            "label": "scheduledRebases",
            "offset": 0,
            "slot": "265",
            "type": "t_array(t_struct(ScheduledRebase)10501_storage)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:74"
          },
          {
            "label": "nextSequenceNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_contract(SmartToken)10396)dyn_storage": {
            "label": "contract SmartToken[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ScheduledRebase)10501_storage)dyn_storage": {
            "label": "struct TokenFactory.ScheduledRebase[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Update)9328": {
            "label": "contract IERC20Update",
            "numberOfBytes": "20"
          },
          "t_contract(SmartToken)10396": {
            "label": "contract SmartToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(ScheduledRebase)10501_storage": {
            "label": "struct TokenFactory.ScheduledRebase",
            "members": [
              {
                "label": "sequenceNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isNaturalRebase",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "smartTokenXprice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
