{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xc4A4840B3FF26D1908f5bfaC6eA4F7a79EB4C42a",
      "txHash": "0x07d9c7f44604fcf16e674dede1769ab953a744265a86210ccbbb27cffd86a5a8",
      "kind": "uups"
    },
    {
      "address": "0x0B6Ca1E37bB7F117A15b21564604eCc35f7732b4",
      "txHash": "0xb68203d579b49362c8287f237ac932b4569c4cda7fd03e20685703c5eac01f1c",
      "kind": "uups"
    },
    {
      "address": "0x752eFB738fBc8AD51640A8042392d30e3652cdEd",
      "txHash": "0xb10ab2fac6d5c71b7cc23426447228c62d4d2a493f34637139c2014edc0e110d",
      "kind": "uups"
    }
  ],
  "impls": {
    "095f6753c150cbf75f5c0967210fe05abd29f720d3151f41ae3156ffac456f88": {
      "address": "0x19BDE23bF5E42754A97bC5c3F6DD0b972c15c100",
      "txHash": "0x0e587c880505253578265632d15e0cd3baf955a3bd333f8c47968501700c7dc6",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "sanctionsContract",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:14"
          },
          {
            "label": "scallingFactorX",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:47"
          },
          {
            "label": "smartTokenArray",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_contract(SmartToken)6490)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:48"
          },
          {
            "label": "lastRebaseCount",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:49"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "255",
            "type": "t_contract(IERC20Update)5581",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:50"
          },
          {
            "label": "baseTokenDecimals",
            "offset": 20,
            "slot": "255",
            "type": "t_uint8",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:51"
          },
          {
            "label": "interval",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:52"
          },
          {
            "label": "lastTimeStamp",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:53"
          },
          {
            "label": "smartTokenInitialized",
            "offset": 0,
            "slot": "258",
            "type": "t_bool",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:54"
          },
          {
            "label": "signersAddress",
            "offset": 1,
            "slot": "258",
            "type": "t_address",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:55"
          },
          {
            "label": "sequenceStatus",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:56"
          },
          {
            "label": "managementFeesRate",
            "offset": 0,
            "slot": "260",
            "type": "t_uint32",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:59"
          },
          {
            "label": "mgmtFeesHistory",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint32)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:60"
          },
          {
            "label": "userMgmtFeeHistory",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:61"
          },
          {
            "label": "managementFeeEnabled",
            "offset": 0,
            "slot": "263",
            "type": "t_bool",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:62"
          },
          {
            "label": "mgmtFeeSum",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:63"
          },
          {
            "label": "scheduledRebases",
            "offset": 0,
            "slot": "265",
            "type": "t_array(t_struct(ScheduledRebase)6594_storage)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:73"
          },
          {
            "label": "nextSequenceNumber",
            "offset": 0,
            "slot": "266",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_contract(SmartToken)6490)dyn_storage": {
            "label": "contract SmartToken[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ScheduledRebase)6594_storage)dyn_storage": {
            "label": "struct TokenFactory.ScheduledRebase[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint32)dyn_storage": {
            "label": "uint32[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Update)5581": {
            "label": "contract IERC20Update",
            "numberOfBytes": "20"
          },
          "t_contract(SmartToken)6490": {
            "label": "contract SmartToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(ScheduledRebase)6594_storage": {
            "label": "struct TokenFactory.ScheduledRebase",
            "members": [
              {
                "label": "sequenceNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isNaturalRebase",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "smartTokenXprice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3596f73dfb97939ab4e3a8616d36254162d6f6e8200f358d7fb096e8d48a8d99": {
      "address": "0x7FEBf86Db6A485C5D22a44757c3566A5B4160e82",
      "txHash": "0x76c2cd639c1d10ce5fa2f33b71a0d3669222c487c1a32d68f535ebb16dcfb2ee",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2398_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:28"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:40",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20PermitUpgradeable.sol:108"
          },
          {
            "label": "sanctionsContract",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:14"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "tokenFactory",
            "offset": 0,
            "slot": "405",
            "type": "t_contract(TokenFactory)8256",
            "contract": "SmartToken",
            "src": "contracts/vaults/SmartToken.sol:35"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "406",
            "type": "t_contract(IERC20Update)5581",
            "contract": "SmartToken",
            "src": "contracts/vaults/SmartToken.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Update)5581": {
            "label": "contract IERC20Update",
            "numberOfBytes": "20"
          },
          "t_contract(TokenFactory)8256": {
            "label": "contract TokenFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2398_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2398_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
