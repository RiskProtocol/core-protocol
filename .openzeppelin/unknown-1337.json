{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8A2247318790c1C0a48c1E263c4Cf88B06AfC10d",
      "txHash": "0xfacc1b531023e3072ac31fc4255f2385cf2f5287d217462452595645faa4383b",
      "kind": "uups"
    },
    {
      "address": "0x19BDE23bF5E42754A97bC5c3F6DD0b972c15c100",
      "txHash": "0x0ccfdd72c253652aa1dd75c6215faba58c96ffec137dc2c0efa1659a36c1f32e",
      "kind": "uups"
    },
    {
      "address": "0xc4A4840B3FF26D1908f5bfaC6eA4F7a79EB4C42a",
      "txHash": "0xdc9a421062fdc7a8efd1711d0098ebaa904a71f6a09afcd447ae273e9d776cc8",
      "kind": "uups"
    },
    {
      "address": "0x95998271D6D0406E0d7ac52Ad4259Cbf40dC3C9a",
      "txHash": "0xb8f892aab5c8386d0c6abf738a942cb130dd9b8ee67819ae16bf28ba4a25a87e",
      "kind": "uups"
    }
  ],
  "impls": {
    "fd711fcaae3356d0089b95ee9d331ec01108ab08be3f07791d7e55bd4e0f0501": {
      "address": "0x0eeD89948f0D375fD9a0011ADb0942d96A9d8C60",
      "txHash": "0x0c6d1713d9e342359dbc9d37b87ab44e49d92389ff9d31fab4ae61eea4797bf1",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "sanctionsContract",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:28"
          },
          {
            "label": "depositCircuitBreaker",
            "offset": 20,
            "slot": "251",
            "type": "t_bool",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:30"
          },
          {
            "label": "withdrawCircuitBreaker",
            "offset": 21,
            "slot": "251",
            "type": "t_bool",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:31"
          },
          {
            "label": "transferCircuitBreaker",
            "offset": 22,
            "slot": "251",
            "type": "t_bool",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:32"
          },
          {
            "label": "rebalanceCircuitBreaker",
            "offset": 23,
            "slot": "251",
            "type": "t_bool",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:33"
          },
          {
            "label": "rebalanceElements",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_struct(RebalanceElements)12496_storage)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:50"
          },
          {
            "label": "userRebalanceElements",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_struct(UserRebalanceElements)12505_storage)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:51"
          },
          {
            "label": "smartTokenArray",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_contract(SmartToken)12376)dyn_storage",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:54"
          },
          {
            "label": "lastRebalanceCount",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:56"
          },
          {
            "label": "baseToken",
            "offset": 0,
            "slot": "256",
            "type": "t_contract(IERC20Update)9241",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:58"
          },
          {
            "label": "baseTokenDecimals",
            "offset": 20,
            "slot": "256",
            "type": "t_uint8",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:60"
          },
          {
            "label": "interval",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:62"
          },
          {
            "label": "lastTimeStamp",
            "offset": 0,
            "slot": "258",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:64"
          },
          {
            "label": "smartTokenInitialized",
            "offset": 0,
            "slot": "259",
            "type": "t_bool",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:66"
          },
          {
            "label": "signersAddress",
            "offset": 1,
            "slot": "259",
            "type": "t_address",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:68"
          },
          {
            "label": "sequenceNumberApplied",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:71"
          },
          {
            "label": "managementFeesRate",
            "offset": 0,
            "slot": "261",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:73"
          },
          {
            "label": "managementFeeEnabled",
            "offset": 0,
            "slot": "262",
            "type": "t_bool",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:74"
          },
          {
            "label": "lastRebalanceFees",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:75"
          },
          {
            "label": "treasuryWallet",
            "offset": 0,
            "slot": "264",
            "type": "t_address",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:76"
          },
          {
            "label": "orchestrator",
            "offset": 0,
            "slot": "265",
            "type": "t_address",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:77"
          },
          {
            "label": "scheduledRebalances",
            "offset": 0,
            "slot": "266",
            "type": "t_mapping(t_uint256,t_struct(ScheduledRebalance)10175_storage)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:95"
          },
          {
            "label": "scheduledRebalancesLength",
            "offset": 0,
            "slot": "267",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:97"
          },
          {
            "label": "nextSequenceNumber",
            "offset": 0,
            "slot": "268",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:101"
          },
          {
            "label": "period",
            "offset": 0,
            "slot": "269",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:104"
          },
          {
            "label": "withdrawLimit",
            "offset": 0,
            "slot": "270",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:105"
          },
          {
            "label": "depositLimit",
            "offset": 0,
            "slot": "271",
            "type": "t_uint256",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:106"
          },
          {
            "label": "hasWithdrawLimit",
            "offset": 0,
            "slot": "272",
            "type": "t_bool",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:107"
          },
          {
            "label": "hasDepositLimit",
            "offset": 1,
            "slot": "272",
            "type": "t_bool",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:108"
          },
          {
            "label": "currentWithdrawPeriodEnd",
            "offset": 0,
            "slot": "273",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:109"
          },
          {
            "label": "currentWithdrawPeriodAmount",
            "offset": 0,
            "slot": "274",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:110"
          },
          {
            "label": "currentDepositPeriodEnd",
            "offset": 0,
            "slot": "275",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:111"
          },
          {
            "label": "currentDepositPeriodAmount",
            "offset": 0,
            "slot": "276",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TokenFactory",
            "src": "contracts/vaults/TokenFactory.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_contract(SmartToken)12376)dyn_storage": {
            "label": "contract SmartToken[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RebalanceElements)12496_storage)dyn_storage": {
            "label": "struct TokenFactory.RebalanceElements[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Update)9241": {
            "label": "contract IERC20Update",
            "numberOfBytes": "20"
          },
          "t_contract(SmartToken)12376": {
            "label": "contract SmartToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserRebalanceElements)12505_storage)": {
            "label": "mapping(address => struct TokenFactory.UserRebalanceElements)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ScheduledRebalance)10175_storage)": {
            "label": "mapping(uint256 => struct Shared.ScheduledRebalance)",
            "numberOfBytes": "32"
          },
          "t_struct(RebalanceElements)12496_storage": {
            "label": "struct TokenFactory.RebalanceElements",
            "members": [
              {
                "label": "BalanceFactorXY",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "BalanceFactorUx",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "BalanceFactorUy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "FeeFactor",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ScheduledRebalance)10175_storage": {
            "label": "struct Shared.ScheduledRebalance",
            "members": [
              {
                "label": "sequenceNumber",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isNaturalRebalance",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "smartTokenXprice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(UserRebalanceElements)12505_storage": {
            "label": "struct TokenFactory.UserRebalanceElements",
            "members": [
              {
                "label": "netX",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "netY",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "Ux",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "Uy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ed6e2a747d71f549c1ea9ff451611dae8eaa83ed55abe48c4eceaab6f2f6d4e2": {
      "address": "0xC12925f50182052BE38ADb54fF9a41697eB5b85F",
      "txHash": "0xded66698a7d8b9c01bd8734167335c223931be6b16f03cfc7a2af1bd91a66f02",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "contracts/lib/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "contracts/lib/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "contracts/lib/ERC20/ERC20Upgradeable.sol:49"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "204",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/lib/ERC20/ERC20Upgradeable.sol:51"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "205",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/lib/ERC20/ERC20Upgradeable.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "contracts/lib/ERC20/ERC20Upgradeable.sol:490"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "251",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "252",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "253",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_struct(Counter)2516_storage)",
            "contract": "ERC20PermitUpgradeable",
            "src": "contracts/lib/ERC20/extensions/ERC20PermitUpgradeable.sol:33"
          },
          {
            "label": "_PERMIT_TYPEHASH_DEPRECATED_SLOT",
            "offset": 0,
            "slot": "304",
            "type": "t_bytes32",
            "contract": "ERC20PermitUpgradeable",
            "src": "contracts/lib/ERC20/extensions/ERC20PermitUpgradeable.sol:47",
            "renamedFrom": "_PERMIT_TYPEHASH"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC20PermitUpgradeable",
            "src": "contracts/lib/ERC20/extensions/ERC20PermitUpgradeable.sol:130"
          },
          {
            "label": "sanctionsContract",
            "offset": 0,
            "slot": "354",
            "type": "t_address",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:28"
          },
          {
            "label": "depositCircuitBreaker",
            "offset": 20,
            "slot": "354",
            "type": "t_bool",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:30"
          },
          {
            "label": "withdrawCircuitBreaker",
            "offset": 21,
            "slot": "354",
            "type": "t_bool",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:31"
          },
          {
            "label": "transferCircuitBreaker",
            "offset": 22,
            "slot": "354",
            "type": "t_bool",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:32"
          },
          {
            "label": "rebalanceCircuitBreaker",
            "offset": 23,
            "slot": "354",
            "type": "t_bool",
            "contract": "BaseContract",
            "src": "contracts/vaults/BaseContract.sol:33"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "355",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "356",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "tokenFactory",
            "offset": 0,
            "slot": "405",
            "type": "t_contract(TokenFactory)15095",
            "contract": "SmartToken",
            "src": "contracts/vaults/SmartToken.sol:48"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "406",
            "type": "t_contract(IERC20Update)9241",
            "contract": "SmartToken",
            "src": "contracts/vaults/SmartToken.sol:50"
          },
          {
            "label": "isX",
            "offset": 20,
            "slot": "406",
            "type": "t_bool",
            "contract": "SmartToken",
            "src": "contracts/vaults/SmartToken.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Update)9241": {
            "label": "contract IERC20Update",
            "numberOfBytes": "20"
          },
          "t_contract(TokenFactory)15095": {
            "label": "contract TokenFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)2516_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)2516_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0ac0b4ec8ac1611e61a5fdfa811c73fd3362e0270c59d14c0077e6375fd1af6d": {
      "address": "0x68D452076250f56b18289a230c34534f6293C64F",
      "txHash": "0x4bfd3a7365fba469bb667186ea397aa047e9a6cf36ecbaca0bd2128762daa482",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "operations",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_struct(Operation)10444_storage)dyn_storage",
            "contract": "Orchestrator",
            "src": "contracts/orchestrator/Orchestrator.sol:19"
          },
          {
            "label": "tokenFactory",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(ITokenFactory)9273",
            "contract": "Orchestrator",
            "src": "contracts/orchestrator/Orchestrator.sol:20"
          },
          {
            "label": "balancerPools",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_address)dyn_storage",
            "contract": "Orchestrator",
            "src": "contracts/orchestrator/Orchestrator.sol:21"
          },
          {
            "label": "poolExists",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Orchestrator",
            "src": "contracts/orchestrator/Orchestrator.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Operation)10444_storage)dyn_storage": {
            "label": "struct Orchestrator.Operation[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(ITokenFactory)9273": {
            "label": "contract ITokenFactory",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(Operation)10444_storage": {
            "label": "struct Orchestrator.Operation",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "destination",
                "type": "t_address",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
