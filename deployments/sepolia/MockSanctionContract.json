{
  "address": "0x518Df2cbe4481AC500aF6dE4AAdc33c24B7AF7C0",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isSanctioned",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isSanctioned_",
          "type": "bool"
        }
      ],
      "name": "setSanction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5a2902676fcd4183b33dcf6ce34404a6262a4673b3b5c8d016d6e4bebe6340cb",
  "receipt": {
    "to": null,
    "from": "0x786d956DBc070815F9b53a6dd03D38EDf33EE2C7",
    "contractAddress": "0x518Df2cbe4481AC500aF6dE4AAdc33c24B7AF7C0",
    "transactionIndex": 17,
    "gasUsed": "145537",
    "logsBloom": "0x
    "blockHash": "0x507d7dccad20a52b633c4b08706f444c3418f215dcf6ad8d8ebe44215f7c3cad",
    "transactionHash": "0x5a2902676fcd4183b33dcf6ce34404a6262a4673b3b5c8d016d6e4bebe6340cb",
    "logs": [],
    "blockNumber": 4641476,
    "cumulativeGasUsed": "3143506",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "48670b3da1b5c0351217cb7f8fb7ad52",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isSanctioned\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isSanctioned_\",\"type\":\"bool\"}],\"name\":\"setSanction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MockSanctionContract.sol\":\"MockSanctionContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":15000},\"remappings\":[]},\"sources\":{\"contracts/mocks/MockSanctionContract.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.9;\\n\\ncontract MockSanctionContract {\\n    mapping(address => bool) private sanctions;\\n\\n    function isSanctioned(address addr) external view returns (bool) {\\n        return sanctions[addr];\\n    }\\n\\n    function setSanction(address addr, bool isSanctioned_) external {\\n        sanctions[addr] = isSanctioned_;\\n    }\\n}\",\"keccak256\":\"0xb27f367a5b7a07546a5a774a2720154d05e20e06058795ae496daecd56d3241d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101ab806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063496a1d001461003b578063df592f7d146100a1575b600080fd5b61009f610049366004610117565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b005b6100da6100af366004610153565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b803573ffffffffffffffffffffffffffffffffffffffff8116811461011257600080fd5b919050565b6000806040838503121561012a57600080fd5b610133836100ee565b91506020830135801515811461014857600080fd5b809150509250929050565b60006020828403121561016557600080fd5b61016e826100ee565b939250505056fea26469706673582212209e163e4f3f9b26a8789cc5ba2711bebaad24ad6d6bfbb40e0f6849124730eedc64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063496a1d001461003b578063df592f7d146100a1575b600080fd5b61009f610049366004610117565b73ffffffffffffffffffffffffffffffffffffffff91909116600090815260208190526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055565b005b6100da6100af366004610153565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b803573ffffffffffffffffffffffffffffffffffffffff8116811461011257600080fd5b919050565b6000806040838503121561012a57600080fd5b610133836100ee565b91506020830135801515811461014857600080fd5b809150509250929050565b60006020828403121561016557600080fd5b61016e826100ee565b939250505056fea26469706673582212209e163e4f3f9b26a8789cc5ba2711bebaad24ad6d6bfbb40e0f6849124730eedc64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9563,
        "contract": "contracts/mocks/MockSanctionContract.sol:MockSanctionContract",
        "label": "sanctions",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}